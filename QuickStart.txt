GNU Gama Qt GUI
===============
Aleš Čepek <cepek@gnu.org>
:Author Initials: AC
:toc:
:icons:
:numbered:
:website: http://www.gnu.org/software/gama

// asciidoc -a data-uri -a icons -a toc -a max-width=55em QuickStart.txt

GNU Gama is a project dedicated to adjustment of geodetic networks. It
is intended for use with traditional geodetic surveyings which are
still used and needed in special measurements (e.g., underground or
high precision engineering measurements) where the Global Positioning
System (GPS) cannot be used.

http://www.gnu.org/software/gama/

Qt GUI for geodetic networks is an application +gama-q2+ in which XML
input is replaced by a database. The most simple case is _Sqlite3_ file
database, which does not need any special knowledge from the user.

Download and build
------------------

Download source codes from the git server following the give commands

   $ git clone git://git.sv.gnu.org/gama/qt.git
   $ cd  qt/gama-q2/lib/
   $ git clone git://git.sv.gnu.org/gama.git
   $ cd  ../..
   $ qmake
   $ make
   $ gama-q2/gama-q2 &

How to build an example database
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Probably you will also want an example database. You can easily build
_Sqlite3_ database from GNU Gama example collection. To create the
database you will also need some programs from GNU Gama project.

   $ mkdir _your-working-directory_
   $ cd _your-working-directory_

Download and build GNU Gama

   $ git clone git://git.sv.gnu.org/gama.git
   $ cd gama
   $ ./autogen.sh
   $ .configure
   $ make

Now return to _your-working-directory_, download examples and build
the examples.db database (_Sqlite3_).

   $ cd ..
   $ git clone git://git.sv.gnu.org/gama/examples.git
   $ ls
   examples  gama
   $ cd examples/gama-local/sqlite/
   $ make build-sqlite3-examples.db 
   $ ls
   examples.db  Makefile

Known bugs
----------

* Functions in menu _database_ do not close properly or are not
  implemented at all.
* SVG figures need thorough revision and clean up.
* Observation editor does not implement all fields yet.

TODO
----

* More interfaces and better access to low level adjustment routines.
* Online help.
